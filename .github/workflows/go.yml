name: Go

on:
  push:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Install mingw Linux
      if: ${{ runner.os == 'Linux' }}
      run: sudo apt-get install -y gcc-mingw-w64

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      shell: bash

    - name: Build
      run: make build

    - name: Lint
      run: make lint

    - name: Test
      run: make test

    # # TODO: wait for #https://github.com/actions/virtual-environments/issues/228
    # - name: Build windows
    #   run: CC=x86_64-w64-mingw32-gcc GOOS=windows GOARCH=amd64 CGO_ENABLED=1 go build -o rac.exe ./cmd/rac

    - name: Build linux
      run: go build -o rac ./cmd/rac

    - name: binaries
      uses: actions/upload-artifact@v2
      with:
        name: CLI
        path: ./rac*
