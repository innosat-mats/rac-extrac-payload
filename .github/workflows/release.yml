name: Releases

on:
  push:
    tags:
    - 'v*'

jobs:

  build:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: --Linux--- Generate Notes
      if: ${{ runner.os == 'Linux' }}
      uses: ecampidoglio/auto-release-draft@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Get dependencies
      run: |
        export GOPATH=$(go env GOPATH)
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      shell: bash

    - name: Build & Install
      run: make install
      shell: bash

    - name: --Linux--- Bundle binaries
      if: ${{ runner.os == 'Linux' }}
      run: |
        cd /home/runner/go/bin
        tar -czvf "/home/runner/Rac_for_Linux.tar.gz" rac

    - name: --macOS--- Bundle binaries
      if: ${{ runner.os == 'macOS' }}
      run: |
        cd /Users/runner/go/bin
        tar -zcvf "/Users/runner/Rac_for_macOS.tar.gz" rac

    - name: --Windows-- Bundle binaries
      if: ${{ runner.os == 'Windows' }}
      run: |
        $compress = @{
          Path = "C:\Users\runneradmin\go\bin\rac.exe"
          CompressionLevel = "Fastest"
          DestinationPath = "C:\Rac_for_Windows.zip"
        }
        Compress-Archive @compress
      shell: powershell

    - name: --Linux-- Upload bundle to release
      if: ${{ runner.os == 'Linux' }}
      uses: ncipollo/release-action@v1.7.0
      with:
        artifacts: "/home/runner/Rac_for_Linux.tar.gz"
        allowUpdates: true
        prerelease: true
        omitBody: true
        omitName: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: --macOS-- Upload bundle to release
      if: ${{ runner.os == 'macOS' }}
      uses: ncipollo/release-action@v1.7.0
      with:
        artifacts: "/Users/runner/Rac_for_macOS.tar.gz"
        allowUpdates: true
        prerelease: true
        omitBody: true
        omitName: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: --Windows-- Upload bundle to release
      if: ${{ runner.os == 'Windows' }}
      uses: ncipollo/release-action@v1.7.0
      with:
        artifacts: "C:\\Rac_for_Windows.zip"
        allowUpdates: true
        prerelease: true
        omitBody: true
        omitName: true
        token: ${{ secrets.GITHUB_TOKEN }}
